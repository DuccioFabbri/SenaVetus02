<?xml version="1.0" encoding="UTF-8"?>
<project name="VisitIn" default="help">

    <!-- The local.properties file is created and updated by the 'android' tool.
         It contains the path to the SDK. It should *NOT* be checked into
         Version Control Systems. -->
    <property file="local.properties" />

    <!-- The ant.properties file can be created by you. It is only edited by the
         'android' tool to add properties to it.
         This is the place to change some Ant specific build properties.
         Here are some properties you may want to change/update:

         source.dir
             The name of the source directory. Default is 'src'.
         out.dir
             The name of the output directory. Default is 'bin'.

         For other overridable properties, look at the beginning of the rules
         files in the SDK, at tools/ant/build.xml

         Properties related to the SDK location or the project target should
         be updated using the 'android' tool with the 'update' action.

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems.

         -->
    <property file="ant.properties" />

    <!-- if sdk.dir was not set from one of the property file, then
         get it from the ANDROID_HOME env var.
         This must be done before we load project.properties since
         the proguard config can use sdk.dir -->
    <property environment="env" />
    <condition property="sdk.dir" value="${env.ANDROID_HOME}">
        <isset property="env.ANDROID_HOME" />
    </condition>

    <!-- The project.properties file is created and updated by the 'android'
         tool, as well as ADT.

         This contains project specific properties such as project target, and library
         dependencies. Lower level build properties are stored in ant.properties
         (or in .classpath for Eclipse projects).

         This file is an integral part of the build system for your
         application and should be checked into Version Control Systems. -->
    <loadproperties srcFile="project.properties" />

    <!-- quick check on sdk.dir -->
    <fail
            message="sdk.dir is missing. Make sure to generate local.properties using 'android update project' or to inject it through the ANDROID_HOME environment variable."
            unless="sdk.dir"
    />

    <!--
        Import per project custom build rules if present at the root of the project.
        This is the place to put custom intermediary targets such as:
            -pre-build
            -pre-compile
            -post-compile (This is typically used for code obfuscation.
                           Compiled code location: ${out.classes.absolute.dir}
                           If this is not done in place, override ${out.dex.input.absolute.dir})
            -post-package
            -post-build
            -pre-clean
    -->

    <import file="custom_rules.xml" optional="true" />

    <!-- Import the actual build file.

         To customize existing targets, there are two options:
         - Customize only one target:
             - copy/paste the target into this file, *before* the
               <import> task.
             - customize it to your needs.
         - Customize the whole content of build.xml
             - copy/paste the content of the rules files (minus the top node)
               into this file, replacing the <import> task.
             - customize to your needs.

         ***********************
         ****** IMPORTANT ******
         ***********************
         In all cases you must update the value of version-tag below to read 'custom' instead of an integer,
         in order to avoid having your file be overridden by tools such as "android update project"
    -->
<!-- Mi preparo per compilare con il nuovo package-name indicato del manifest-->
<echo>app.versioncode:${app.versioncode}</echo>
	<target name="-pre-build">
		 <!-- Modifico AndroidManifest.xml -->
		 <!-- Sostituisco il nome del package -->
		 <replaceregexp
				   match="package=&quot;(.+)&quot;"
				   replace="package=&quot;${app.package.name}&quot;"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>
		 <replaceregexp
				   match="android:versionCode=&quot;(.*)&quot;"
				   replace="android:versionCode=&quot;${app.versioncode}&quot;"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>	
		 <replaceregexp
				   match="android:versionName=&quot;(.*)&quot;"
				   replace="android:versionName=&quot;${app.versionname}&quot;"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>	
		 <replaceregexp
				   match="android:icon=&quot;@drawable/(.+)&quot;"
				   replace="android:icon=&quot;@drawable/${app.icon}&quot;"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>	
		 <replaceregexp
				   match="android:label=&quot;(.+)&quot;"
				   replace="android:label=&quot;${app.label}&quot;"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>			 
		 <replaceregexp
					
				   match=  "com.google.android.maps.v2.API_KEY&quot; android:value=&quot;(.+)&quot;/>"
				   replace="com.google.android.maps.v2.API_KEY&quot; android:value=&quot;${app.API_KEY}&quot;/>"
				   byline="true">
				<fileset dir="." includes="AndroidManifest.xml"/>			
		 </replaceregexp>
		 
		 <!-- Sostituisco il nome del package in tutti i file in cui Ã¨ importato -->
		 
		 <replaceregexp
				   match="import it.duccius.(.*).R;"
				   replace="import ${app.package.name}.R;"
				   byline="true">
				<fileset dir="src" includes="**/*.java"/>			
		 </replaceregexp>
		 
		<!-- Modifico Utilities.java -->
		 <!-- Sostituisco il nome del file download.xml da scaricare -->
		 <replaceregexp
				   match="private static final String _downloadsFileName = &quot;(.+)&quot;;"
				   replace="private static final String _downloadsFileName = &quot;${remote.download.file}&quot;;"
				   byline="true">
				<fileset dir="src" includes="**/Utilities.java"/>			
		 </replaceregexp>
		 <!-- Sostituisco il path delle immagini da scaricare -->
		 <replaceregexp
				   match="ducciofabbri/pics/(.+)/~img_name~.jpg"
				   replace="ducciofabbri/pics/${remote.pics.folder}/~img_name~.jpg"
				   byline="true">
				<fileset dir="src" includes="**/Utilities.java"/>			
		 </replaceregexp>
		 <replaceregexp
				   match="ducciofabbri\/audio\/(.+)/\w{3}\/~mp3_name~.mp3"
				   replace="ducciofabbri\/audio\/${remote.audio.folder}\/~mp3_name~.mp3"
				   byline="true">
				<fileset dir="src" includes="**/Utilities.java"/>			
		 </replaceregexp>

		 <!-- centro la mappa alla apertura -->
		 <replaceregexp
				   match="LatLng from = new LatLng((.*));"
				   replace="LatLng from = new LatLng(${map.centre.point});"
				   byline="true">
				<fileset dir="src" includes="**/MapNavigation.java"/>			
		 </replaceregexp>
		 <!-- copio le risorse giuste -->
		  <copydir src="${resource.src.dir}" dest="res" forceoverwrite="true"/>
	</target>

    <!-- version-tag: 1 -->
    <import file="${sdk.dir}/tools/ant/build.xml" /> 

</project>
